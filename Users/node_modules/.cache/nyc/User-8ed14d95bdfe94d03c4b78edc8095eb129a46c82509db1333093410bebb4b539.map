{"version":3,"file":"/home/mr-programmer/Projects/TR/Backend/Users/src/DataLayer/Contenxt/User.ts","sources":["/home/mr-programmer/Projects/TR/Backend/Users/src/DataLayer/Contenxt/User.ts"],"names":[],"mappings":";;;;;;AAAA,sDAAgC;AAEhC,IAAK,MAIJ;AAJD,WAAK,MAAM;IACP,mCAAQ,CAAA;IACR,uCAAU,CAAA;IACV,qCAAS,CAAA;AACb,CAAC,EAJI,MAAM,KAAN,MAAM,QAIV;AAoCD,IAAM,UAAU,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IACnC,SAAS,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,OAAO,EAAE;QACL,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,IAAI;KACjB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,IAAI;KACjB;IACD,YAAY,EAAE;QACV,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,IAAI;KACjB;IACD,MAAM,EAAE;QACJ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;KAC9B;IACD,aAAa,EAAC;QACV,IAAI,EAAC,MAAM;QACX,QAAQ,EAAE,IAAI;KACjB;IACD,WAAW,EAAC;QACR,IAAI,EAAC,MAAM;QACX,QAAQ,EAAE,IAAI;KACjB;IACD,UAAU,EAAC;QACP,IAAI,EAAC,IAAI;KACZ;IACD,MAAM,EAAC;QACH,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAE,IAAI;KACjB;CACJ,CAAC,CAAA;AAEF,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,UAAC,KAAgB;IACxC,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC,CAAA;AAED,IAAM,SAAS,GAAG,kBAAQ,CAAC,KAAK,CAAqB,MAAM,EAAE,UAAU,CAAC,CAAC;AAEhE,8BAAS","sourcesContent":["import mongoose from 'mongoose';\n\nenum Gender {\n    Male = 1,\n    Female = 2,\n    Trans = 3\n}\n\ninterface UserAttrs {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    isAdmin: boolean;\n    isActive: boolean;\n    confirmEmail: boolean;\n    gender: number;\n    locked: boolean;\n    lockedDate?: Date;\n    accountFail: number;\n    securityStamp: string;\n}\n\nexport interface UserDoc extends mongoose.Document {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    isAdmin: boolean;\n    isActive: boolean;\n    confirmEmail: boolean;\n    gender: string;\n    locked: boolean;\n    lockedDate?: Date;\n    accountFail: number;\n    securityStamp: string;\n}\n\ninterface UserModel extends mongoose.Model<UserDoc> {\n    build(userAttrs: UserAttrs): UserDoc;\n}\n\nconst UserSchema = new mongoose.Schema({\n    firstName: {\n        type: String,\n        required: true\n    },\n    lastName: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    isAdmin: {\n        type: Boolean,\n        required: true\n    },\n    isActive: {\n        type: Boolean,\n        required: true\n    },\n    confirmEmail: {\n        type: Boolean,\n        required: true\n    },\n    gender: {\n        required: true,\n        type: Object.values(Gender)\n    },\n    securityStamp:{\n        type:String,\n        required: true\n    },\n    accountFail:{\n        type:Number,\n        required: true\n    },\n    lockedDate:{\n        type:Date\n    },\n    locked:{\n        type:Boolean,\n        required: true\n    }\n})\n\nUserSchema.statics.build = (attrs: UserAttrs) => {\n    return new UserModel(attrs);\n}\n\nconst UserModel = mongoose.model<UserDoc, UserModel>(\"User\", UserSchema);\n\nexport { UserModel }"]}